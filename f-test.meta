;; "Hello, world!"
["1000", "0", "f-test/test-literal-1"]         ; f-test/test-literal-1(1000).identifier(0) = "f-test/test-literal-1"
["1000", "5", "100"]                           ; f-test/test-literal-1(1000).type(5) = f/StringLiteral(100)
["1000", "101", "Hello, world!"]               ; f-test/test-literal-1(1000).f/StringLiteral.value(101) = "Hello, world!"


;; "foobar"
["1001", "0", "f-test/Kate's program"]         ; f-test/Kate's program(1001).identifier(0) = "f-test/Kate's program"
["1001", "5", "100"]                           ; f-test/Kate's program(1001).type(5) = f/StringLiteral(100)
["1001", "101", "foobar"]                      ; f-test/Kate's program(1001).f/StringLiteral.value(101) = "foobar"


;; { "hello": "world", "Kate": "foobar", "nesting": { "hi": "there" } }
["1002", "0", "f-test/record-test"]            ; f-test/record-test(1002).identifier(0) = "f-test/record-test"
["1002", "5", "102"]                           ; f-test/record-test(1002).type(5) = f/RecordLiteral(102)

["1002", "103", "1003"]                        ; f-test/record-test(1002).f/RecordLiteral.field(103) = (1003)
["1003", "5", "104"]                           ; (1003).type(5) = f/RecordField(104)
["1003", "105", "1004"]                        ; (1003).f/RecordField.key(105) = (1004)
["1003", "106", "1005"]                        ; (1003).f/RecordField.value(106) = (1005)
["1004", "5", "100"]                           ; (1004).type(5) = f/StringLiteral(100)
["1004", "101", "hello"]                       ; (1004).f/StringLiteral.value(101) = "hello"
["1005", "5", "100"]                           ; (1005).type(5) = f/StringLiteral(100)
["1005", "101", "world"]                       ; (1005).f/StringLiteral.value(101) = "world"

["1002", "103", "1006"]                        ; f-test/record-test(1002).f/RecordLiteral.field(103) = (1006)
["1006", "5", "104"]                           ; (1006).type(5) = f/RecordField(104)
["1006", "105", "1007"]                        ; (1006).f/RecordField.key(105) = (1007)
["1006", "106", "1001"]                        ; (1006).f/RecordField.value(106) = f-test/Kate's program(1001)
["1007", "5", "100"]                           ; (1007).type(5) = f/StringLiteral(100)
["1007", "101", "Kate"]                        ; (1007).f/StringLiteral.value(101) = "Kate"

["1002", "103", "1008"]                        ; f-test/record-test(1002).f/RecordLiteral.field(103) = (1008)
["1008", "5", "104"]                           ; (1008).type(5) = f/RecordField(104)
["1008", "105", "1009"]                        ; (1008).f/RecordField.key(105) = (1009)
["1009", "5", "100"]                           ; (1009).type(5) = f/StringLiteral(100)
["1009", "101", "nesting"]                     ; (1009).f/StringLiteral.value(101) = "nesting"
["1008", "106", "1010"]                        ; (1008).f/RecordField.value(106) = (1010)
;; { "hi": "there" }
["1010", "5", "102"]                           ; (1010).type(5) = f/RecordLiteral(102)
["1010", "103", "1011"]                        ; (1010).f/RecordLiteral.field(103) = (1011)
["1011", "5", "104"]                           ; (1011).type(5) = f/RecordField(104)
["1011", "105", "1012"]                        ; (1011).f/RecordField.key(105) = (1012)
["1011", "106", "1013"]                        ; (1011).f/RecordField.value(106) = (1013)
["1012", "5", "100"]                           ; (1012).type(5) = f/StringLiteral(100)
["1012", "101", "hi"]                          ; (1012).f/StringLiteral.value(101) = "hi"
["1013", "5", "100"]                           ; (1013).type(5) = f/StringLiteral(100)
["1013", "101", "there"]                       ; (1013).f/StringLiteral.value(101) = "there"
